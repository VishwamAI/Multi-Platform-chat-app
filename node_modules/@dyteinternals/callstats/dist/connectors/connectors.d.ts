/// <reference types="node" />
import * as EventTypes from '../events/types';
import * as ProtocolTypes from './protocols/types';
export default abstract class Connector {
    protected authInfo: ProtocolTypes.AuthPayload;
    abstract sendChunk(data: EventTypes.EventChunk): void;
    authenticate(data: ProtocolTypes.AuthPayload): void;
}
export declare abstract class QueuedConnector extends Connector {
    protected chunkQueue: EventTypes.EventChunk;
    protected flushTicker: NodeJS.Timeout;
    protected flushInterval: number;
    constructor(flushInterval?: number);
    sendChunk(data: EventTypes.EventChunk): void;
    protected abstract sendChunkToServer(data: EventTypes.EventChunk): Promise<boolean>;
}
