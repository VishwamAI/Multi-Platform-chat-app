export default class Connector {
    authInfo;
    authenticate(data) {
        this.authInfo = data;
    }
}
export class QueuedConnector extends Connector {
    chunkQueue;
    flushTicker;
    flushInterval;
    constructor(flushInterval = 5000) {
        super();
        this.chunkQueue = {
            entries: [],
        };
        this.flushInterval = flushInterval;
    }
    sendChunk(data) {
        this.sendChunkToServer(data);
        // data.entries.forEach((elem) => {
        //     this.chunkQueue.entries.push(elem);
        // });
        // if (!this.flushTicker) {
        //     // No flush timeout tickers have been made, make a new one
        //     this.flushTicker = setTimeout(() => {
        //         this.flushChunks();
        //     }, this.flushInterval);
        // }
    }
}
