import * as EventTypes from '../../events/types';
import { ClientEnvTypeAll, DyteLogger, InhouseCallStatsInitializeParams } from '../../types';
import PubSubConnector from './pubSub';
interface AWSCredentials {
    accessKeyId: string;
    secretAccessKey: string;
}
interface SQSClientConfig {
    region: string;
    credentials: AWSCredentials;
    queue?: string;
}
export default class SQSConnector extends PubSubConnector {
    protected config: SQSClientConfig;
    protected logger: DyteLogger;
    protected sqsApiEndpoint: string;
    protected ingestionLayerDetails: InhouseCallStatsInitializeParams['flags']['ingestionLayerDetails'];
    constructor(env: ClientEnvTypeAll, ingestionLayerDetails: InhouseCallStatsInitializeParams['flags']['ingestionLayerDetails'], logger: DyteLogger);
    sendChunk(data: EventTypes.EventChunk): void;
    private sendDirectly;
    private sendToNewIngestionLayer;
    protected sendChunkToServer(data: EventTypes.EventChunk): Promise<boolean>;
}
export {};
