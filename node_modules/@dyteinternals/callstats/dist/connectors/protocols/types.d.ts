import * as EventTypes from '../../events/types';
export interface SimpleEncodedEntry {
    e: EventTypes.Event;
    t: Date;
    d?: EventTypes.EventData;
}
export declare type SimpleEncodedChunk = SimpleEncodedEntry[];
export declare enum MessageType {
    AUTH = "auth",
    CHUNK = "chunk"
}
export interface AuthPayload {
    peerId: string;
}
export interface SimpleMessageStructureEventChunk {
    messageType: MessageType.CHUNK;
    payload: EventTypes.EventChunk;
}
export interface SimpleMessageStructureAuth {
    messageType: MessageType.AUTH;
    payload: AuthPayload;
}
export declare type SimpleMessageStructure = SimpleMessageStructureEventChunk | SimpleMessageStructureAuth;
export interface SimplePacketStructure {
    messageType: MessageType;
    payload: SimpleEncodedChunk | AuthPayload;
}
